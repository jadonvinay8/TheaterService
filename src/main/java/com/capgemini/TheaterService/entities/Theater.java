package com.capgemini.TheaterService.entities;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.capgemini.TheaterService.beans.Address;
import com.capgemini.TheaterService.beans.ShortMovie;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Objects;

@DynamoDBTable(tableName = "Theater")
public class Theater {

    private String theaterId;
    private String cityId;

    @NotBlank
    private String theaterName;

    @NotNull
    private Address address;

    @NotNull
    @Min(1)
    @Max(5)
    private Double rating;
    private List<ShortMovie> movies;

    public Theater() {
        // Default Constructor
    }

    public Theater(String theaterId, String cityId, @NotNull @NotBlank String theaterName, @NotNull Address address,
                   @NotNull @Min(1) @Max(5) Double rating, List<ShortMovie> movies) {
        this.theaterId = theaterId;
        this.cityId = cityId;
        this.theaterName = theaterName;
        this.address = address;
        this.rating = rating;
        this.movies = movies;
    }

    public Theater(String theatreName, Address address, String cityId, Double rating, List<ShortMovie> movies) {
        this.theaterName = theatreName;
        this.address = address;
        this.cityId = cityId;
        this.rating = rating;
        this.movies = movies;
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getTheaterId() {
        return theaterId;
    }

    public void setTheaterId(String theaterId) {
        this.theaterId = theaterId;
    }

    @DynamoDBAttribute
    public String getTheaterName() {
        return theaterName;
    }

    public void setTheaterName(String theaterName) {
        this.theaterName = theaterName;
    }

    @DynamoDBAttribute
    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    @DynamoDBAttribute
    public List<ShortMovie> getMovies() {
        return movies;
    }

    public void setMovies(List<ShortMovie> movies) {
        this.movies = movies;
    }

    @DynamoDBAttribute
    public String getCityId() {
        return cityId;
    }

    public void setCityId(String cityId) {
        this.cityId = cityId;
    }

    @DynamoDBAttribute
    public Double getRating() {
        return rating;
    }

    public void setRating(Double rating) {
        this.rating = rating;
    }

    @Override
    public String toString() {
        return "Theater{" +
          "theaterId='" + theaterId + '\'' +
          ", cityId='" + cityId + '\'' +
          ", theaterName='" + theaterName + '\'' +
          ", address=" + address +
          ", rating=" + rating +
          ", movies=" + movies +
          '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Theater theater = (Theater) o;
        return Objects.equals(theaterId, theater.theaterId) &&
          Objects.equals(cityId, theater.cityId) &&
          Objects.equals(theaterName, theater.theaterName) &&
          Objects.equals(address, theater.address) &&
          Objects.equals(rating, theater.rating);
    }

    @Override
    public int hashCode() {
        return Objects.hash(theaterId, cityId, theaterName, address, rating);
    }

    public static boolean canUpdateTheater(Theater theater1, Theater theater2) {
        return theater1.getCityId().equals(theater2.getCityId())
          && theater1.getMovies().equals(theater2.getMovies())
          && Address.checkCityEquality(theater1.getAddress(), theater2.getAddress());
    }
}
